#!/bin/bash

# Note: each files and directories you've saved using the ynh_backup helper
# will be located in the current directory, regarding the last argument.

# Exit on command errors and treat unset variables as an error
#set -eu

# See comments in install script
app=$YNH_APP_INSTANCE_NAME

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts

# Source YunoHost helpers
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	#### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================

# Retrieve old app settings
#domain=$(ynh_app_setting_get "$app" domain)
domain=$(ynh_app_setting_get --app=$app --key=domain)

#path_url=$(ynh_app_setting_get "$app" path_url)
path_url=$(ynh_app_setting_get --app=$app --key=path)

final_path=$(ynh_app_setting_get --app=$app --key=final_path)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
# Check domain/path availability
#sudo yunohost app checkurl "${domain}${path_url}" -a "$app" \
#    || ynh_die "Path not available: ${domain}${path_url}"

ynh_script_progression --message="Validating restoration parameters..." --time --weight=1

ynh_webpath_available --domain=$domain --path_url=$path_url \
	|| ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "
    
#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

# Restore NGINX configuration
#sudo cp -a ./nginx.conf "/etc/nginx/conf.d/${domain}.d/${app}.conf"
ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --time --weight=1

ynh_restore_file --origin_path="$final_path"

# Restore sources & data
#src_path="/var/www/${app}"
#sudo cp -a ./sources "$src_path"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..." --time --weight=1

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions to app files
# you may need to make some file and/or directory writeable by www-data (nginx user)
#sudo chown -R root: "$src_path"

# Restore permissions on app files chown -R $app: $final_path
chown -R root: $final_path

#=================================================
# RESTORE THE PHP-FPM CONFIGURATION
#=================================================
### PHP (remove if not used) ###
# If a dedicated php-fpm process is used:
# # Copy PHP-FPM pool configuration and reload the service
# sudo cp -a ./php-fpm.conf "/etc/php5/fpm/pool.d/${app}.conf"
# sudo service php5-fpm reload
### PHPÂ end ###

ynh_restore_file --origin_path="/etc/php/$phpversion/fpm/pool.d/$app.conf"

#=================================================
# RESTORE THE MYSQL DATABASE
#=================================================
### MySQL (remove if not used) ###
# If a MySQL database is used:
# # Create and restore the database
# dbname=$app
# dbuser=$app
# dbpass=$(ynh_app_setting_get "$app" mysqlpwd)
# ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
# ynh_mysql_connect_as "$dbuser" "$dbpass" "$dbname" < ./dump.sql
### MySQL end ###

#ynh_script_progression --message="Restoring the MySQL database..." --time --weight=1

#db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)
#ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
#ynh_mysql_connect_as --user=$db_user --password=$db_pwd --database=$db_name < ./db.sql

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
# Restart webserver
#sudo service nginx reload

ynh_script_progression --message="Reloading NGINX web server and php-fpm..." --time --weight=1

ynh_systemd_action --service_name=php$phpversion-fpm --action=reload
ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --time --last
